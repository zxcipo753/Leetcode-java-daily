class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        int maxProfit = 0; // 初始化最大利润为0
        int minPrice = prices[0]; // 初始化最低买入价为第一天的股票价格

        for (int i = 1; i < n; i++) {
            if (prices[i] < minPrice) {
                // 如果当前股票价格比之前的最低买入价还低，更新最低买入价
                minPrice = prices[i];
            } else {
                // 否则，计算当前卖出股票的利润，并更新最大利润
                int profit = prices[i] - minPrice;
                maxProfit = Math.max(maxProfit, profit);
            }
        }

        return maxProfit;
    }
}
